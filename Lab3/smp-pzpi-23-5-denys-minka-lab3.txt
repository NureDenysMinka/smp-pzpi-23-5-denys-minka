МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ

Кафедра Програмної інженерії

Звіт
з лабораторної роботи №3
з дисципліни: «Скриптові мови програмування»
з теми: «Створення Web застосунків за допомогою PHP»

Виконав:

Перевірив:

ст. гр. ПЗПІ-23-5

cт. виклач кафедри ПІ

Мінка Д. М.

Сокорчук І. П.

Харків 2025

2
1 ІСТОРІЯ ЗМІН
№ Дата
1 23.05.2025

Версія звіту
0.1

Опис змін та виправлень
Початкова версія

3
2 ЗАВДАННЯ
Розробити робочий інтернет-магазин, що має складатися з таких розділів:
–

Сторінка товарів;

–

Сторінка кошик;

Кожна сторінка має складатися з таких частин:
–

«Шапка» сторінки;

–

Тіло сторінки;

–

«Підвал» сторінки.

На сторінці товарів необхідно відобразити список доступних для покупки
найменувань з можливістю вибрати кількість одиниць товарів і кнопкою «купити».
Під час натискання на кнопку «купити», має відправлятися запит (відправка
форми, методом POST) на сервер, де дані зберігаються в сесію.
На сторінці «Кошик» необхідно відобразити список обраних користувачем
товарів (які були збережені у сесію).
Якщо жодного товару не обрано, то має бути відображений напис «Перейти
до покупок» (посилання).

4
3 ОПИС ВИКОНАНОЇ РОБОТИ
Розроблений веб застосунок є дещо видозміненим варіантом консольного
додатку розробленого в рамках 2-ї лабораторної роботи.
Розпочнемо огляд з вхідного файлу «index.php». Він виконує роль
маршрутизатора та вказує серверу які сторінки відображати в залежності від шляху,
записаного у змінній «path», якщо ж сторінка не знайдена виводиться сторінка 404:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

<?php
require_once 'db/seed.php';
require_once 'db/DbConnection.php';
$path = $_SERVER['PATH_INFO'] ?? '/';
session_start();
seed();
switch ($path) {
case '/':
include 'pages/home.phtml';
break;
case '/products':
include 'pages/products.phtml';
break;
case '/cart':
include 'pages/cart.phtml';;
break;
default:
http_response_code(404);
include 'pages/404.phtml';
break;
}

Також саме тут запускається нова сесія, або відновлюється вже існуюча, за
допомогою вбудованої функції «session_start» та виконується функція «seed», що
заповнює БД (базу даних), якщо вона пуста:
1
2
3
4
5
6
7
8
9
10

<?php
require_once 'db/DbConnection.php';
function seed(): void
{
$connection = DbConnection::getInstance()->getConnection();
$connection->exec("
create table if not exists products (

5
11
id integer primary key autoincrement,
12
name text not null,
13
price integer not null
14
)
15
");
16
17
$stmt = $connection->query("select count(*) from products");
18
$count = (int) $stmt->fetchColumn();
19
20
if ($count == 0) {
21
$connection->exec("
22
insert into products (name, price) values
23
('Молоко пастеризоване', 12),
24
('Хліб чорний', 9),
25
('Сир білий', 21),
26
('Сметана 20%', 25),
27
('Кефір 1%', 19),
28
('Вода газована', 25),
29
('Печиво \"Весна\"', 25);
30
");
31
}
32 }

Додаток використовує базу даних «SQLite» для зберігання даних про товари,
для підключення до бази у програмі створено спеціальний клас «DbConnection», що
реалізує дизайн-паттерн «Singleton»:
1 <?php
2
3 class DbConnection
4 {
5
private static ?DbConnection $instance = null;
6
private PDO $connection;
7
8
private function __construct()
9
{
10
$this->connection = new PDO('sqlite:./db/db.sqlite');
11
$this->connection->setAttribute(PDO::ATTR_ERRMODE,
PDO::ERRMODE_EXCEPTION);;
12
}
13
14
public static function getInstance(): DbConnection
15
{
16
if (self::$instance === null) {
17
self::$instance = new DbConnection();
18
}
19
20
return self::$instance;
21
}
22
23
public function getConnection(): PDO
24
{
25
return $this->connection;

6
26
}
27 }

Для роботи з товарами створено сервіс «ProductsService», що має один метод
для отримання товарів з БД:
1
2
3
4
5
6
7
8
9
10
11

<?php
require_once 'db/DbConnection.php';
class ProductsService
{
private readonly PDO $connection;

public function __construct()
{
$this->connection = DbConnection::getInstance()>getConnection();
12
}
13
14
public function getProducts(): array {
15
$stmt = $this->connection->query("select * from products");
16
17
return $stmt->fetchAll(PDO::FETCH_ASSOC);
18
}
19 }

Для роботи з корзиною створено сервіс «CartService», що імлементує тіж
самі методи, що й клас «Cart» з 2-ї лабораторної роботи, з єдиною різницею, що
тепер для зберігання товарів в корзині використовується користувацька сесія, а не
асоціативний масив:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

<?php
require_once './services/ProductsService.php';
class CartService
{
private ProductsService $productsService;
public function __construct()
{
$this->productsService = new ProductsService();
}
public function getCartItems(): array {
$products = $this->productsService->getProducts();
$cart = [];
foreach ($products as $product) {
if (isset($_SESSION['cart'][$product['id']])) {

7
19
20
21
22
23
24

$item = [
'id' => $product['id'],
'name' => $product['name'],
'price' => $product['price'],
'quantity' => $_SESSION['cart'][$product['id']],
'total' => $product['price'] * $_SESSION['cart']
[$product['id']]
25
];
26
27
$cart[] = $item;
28
}
29
}
30
31
return $cart;
32
}
33
34
public function calculateTotal(): int {
35
$total = 0;
36
foreach ($this->getCartItems() as $item) {
37
38
$total += $item['total'];
39
}
40
41
return $total;
42
}
43
44
public function addItem(array $quantities): void {
45
$isEmpty = true;
46
47
foreach ($quantities as $id => $quantity) {
48
$id = (int) $id;
49
$quantity = max(0, min(100, (int) $quantity));
50
51
if ($quantity > 0) {
52
$_SESSION['cart'][$id] = $quantity;
53
$isEmpty = false;
54
}
55
}
56
57
if (!$isEmpty) {
58
header("Location: " . "/cart");
59
}
60
}
61
62
public function removeItem(int $id): void {
63
unset($_SESSION['cart'][$id]);
64
header("Location: " . $_SERVER['REQUEST_URI']);
65
}
66
67
public function clearCart(): void {
68
unset($_SESSION['cart']);
69
header("Location: " . "/");
70
}
71 }

8
Говорячи про шаблонізацію, аби уникнути повторенню коду були створені
шаблони для «шапки» та «підвалу» сторінки, що перевикористовуються на всіх
сторінках додатку.

9
4 ВИСНОВКИ
Під час виконання лабораторної роботи, я навчився розробляти базові веб
застосунки застосовуючи PHP, HTML та CSS.
